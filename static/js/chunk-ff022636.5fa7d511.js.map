{"version":3,"sources":["webpack:///./src/utils/config.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/namehash.js","webpack:///./node_modules/@ethersproject/random/lib.esm/index.js","webpack:///./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack:///./src/assets/images/dao-black.png","webpack:///./src/assets/images/dao-how.png","webpack:///./node_modules/@ethersproject/base64/lib.esm/base64.js","webpack:///./src/assets/images/dao-jiu.png","webpack:///./node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/index.js","webpack:///./node_modules/@ethersproject/basex/lib.esm/index.js","webpack:///./src/components/Footer.vue?f638","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/sha2.js","webpack:///./src/assets/images/dao-bear.png","webpack:///./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack:///./src/assets/images/dao-dog.png","webpack:///./node_modules/@ethersproject/constants/lib.esm/hashes.js","webpack:///./node_modules/ethers/lib/utils.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack:///./src/assets/images/dao-gun.png","webpack:///./node_modules/@ethersproject/hash/lib.esm/_version.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/assets/images/dao-tai.png","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack:///./node_modules/@ethersproject/random/lib.esm/random.js","webpack:///./src/assets/images/Blind-box.png","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack:///./node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/lib.esm/interface.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/index.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ws.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/index.js","webpack:///./node_modules/ethers/lib.esm/_version.js","webpack:///./node_modules/ethers/lib.esm/ethers.js","webpack:///./node_modules/ethers/lib.esm/index.js","webpack:///./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js","webpack:///./node_modules/ethereum-multicall/dist/esm/enums/networks.js","webpack:///./node_modules/ethereum-multicall/dist/esm/utils.js","webpack:///./node_modules/ethereum-multicall/dist/esm/multicall.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/units/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/units/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/message.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/index.js","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/interface.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/idna.js","webpack:///./src/assets/images/dao-yellow.png","webpack:///./src/assets/images/studio.png","webpack:///./node_modules/@ethersproject/strings/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack:///./src/assets/images/dao-fox.png","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack:///./src/assets/images/potato.png","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./src/assets/images/dao-goldgun.png","webpack:///./node_modules/@ethersproject/constants/lib.esm/strings.js","webpack:///./node_modules/@ethersproject/web/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/web/lib.esm/geturl.js","webpack:///./node_modules/@ethersproject/web/lib.esm/index.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack:///./node_modules/bech32/index.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/addresses.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/types.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/typed-data.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack:///./src/assets/images/dao-red.png","webpack:///./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/index.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/index.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack:///./src/components/Footer.vue","webpack:///./src/components/Footer.vue?3328","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack:///./node_modules/@ethersproject/random/lib.esm/_version.js"],"names":["config","OpenAddress","UsdtAddress","RootAddress","logger","Zeros","Uint8Array","fill","Partition","RegExp","isValidName","name","comps","split","i","length","Error","error","namehash","throwArgumentError","current","result","partition","match","label","_constructorGuard","Zero","from","NegativeOne","throwFault","message","fault","operation","value","params","undefined","throwError","errors","NUMERIC_FAULT","zeros","getMultiplier","decimals","toNumber","e","substring","formatFixed","multiplier","negative","lt","mul","fraction","mod","toString","whole","div","parseFixed","wholeValue","fractionValue","wei","add","FixedFormat","constructorGuard","signed","width","UNSUPPORTED_OPERATION","this","String","_multiplier","Object","freeze","parseInt","check","key","type","defaultValue","FixedNumber","hex","format","checkNew","_hex","_value","_isFixedNumber","other","_checkFormat","a","b","fromValue","sub","push","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","floor","divUnsafe","fromTwos","toTwos","toHexString","parseFloat","fromString","fixedFormat","numeric","decimal","fromBytes","code","INVALID_ARGUMENT","module","exports","decode","textData","atob","data","charCodeAt","encode","fromCharCode","btoa","version","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","done","then","apply","isAccount","privateKey","address","hasMnemonic","mnemonic","phrase","provider","super","signingKey","publicKey","srcMnemonic","path","locale","node","fromMnemonic","derivePath","isSigningKey","curve","isProvider","_mnemonic","_signingKey","transaction","tx","signature","signDigest","domain","types","populated","resolveNames","resolveName","hash","password","options","progressCallback","entropy","random","extraEntropy","json","account","wordlist","verifyMessage","verifyTypedData","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","string","k","_leader","q","TypeError","bytes","byte","reverse","Base32","Base58","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","parseParamType","param","allowIndexed","originalParam","newNode","parent","state","allowType","indexed","replace","c","allowParams","verifyType","components","child","allowName","allowArray","sibling","readArray","populate","object","FormatTypes","sighash","minimal","full","paramTypeArray","ParamType","arrayLength","arrayChildren","fromObject","baseType","_isParamType","map","comp","JSON","parse","stringify","join","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","trim","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","forEach","modifier","warn","parseGas","gas","parseModifiers","constant","payable","stateMutability","verifyState","isConstructorFragment","parens","outputs","output","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","accum","depth","offset","ripemd160","update","digest","sha256","sha512","computeHmac","algorithm","hmac","pbkdf2","salt","iterations","keylen","hashAlgorithm","hLen","l","DK","block1","r","T","set","U","Math","ceil","destPos","len","slice","HashZero","__createBinding","create","o","m","k2","defineProperty","enumerable","get","__setModuleDefault","v","__importStar","__esModule","prototype","hasOwnProperty","call","formatBytes32String","Utf8ErrorFuncs","toUtf8String","toUtf8CodePoints","toUtf8Bytes","_toEscapedUtf8String","nameprep","hexDataSlice","hexDataLength","hexZeroPad","hexValue","hexStripZeros","hexConcat","isHexString","hexlify","base64","base58","TransactionDescription","LogDescription","Interface","SigningKey","HDNode","defaultPath","isBytesLike","isBytes","zeroPad","stripZeros","concat","arrayify","shallowCopy","resolveProperties","getStatic","defineReadOnly","deepCopy","checkProperties","poll","fetchJson","_fetchData","RLP","Logger","checkResultErrors","defaultAbiCoder","AbiCoder","Indexed","Utf8ErrorReason","UnicodeNormalizationForm","SupportedAlgorithm","mnemonicToSeed","isValidMnemonic","entropyToMnemonic","mnemonicToEntropy","getAccountPath","recoverPublicKey","computePublicKey","recoverAddress","computeAddress","getJsonWalletAddress","TransactionTypes","serializeTransaction","parseTransaction","accessListify","joinSignature","splitSignature","soliditySha256","solidityKeccak256","solidityPack","shuffled","randomBytes","keccak256","commify","parseUnits","formatUnits","parseEther","formatEther","isAddress","getCreate2Address","getContractAddress","getIcapAddress","getAddress","_TypedDataEncoder","id","hashMessage","parseBytes32String","abi_1","address_1","basex_1","bytes_1","hash_1","hdnode_1","json_wallets_1","keccak256_1","logger_1","sha2_1","solidity_1","pack","random_1","properties_1","signing_key_1","strings_1","transactions_1","serialize","units_1","wallet_1","web_1","sha2_2","strings_2","array","tmp","words","loadWords","lang","toLowerCase","index","word","langEn","register","wordlists","en","requireObjectCoercible","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","start","end","isCrowdsaleWallet","encseed","ethaddr","isKeystoreWallet","anyGlobal","window","global","crypto","msCrypto","getRandomValues","buffer","checkErrors","Array","isArray","childPath","Coder","localName","dynamic","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","BUFFER_OVERRUN","_getValue","coerceFunc","allowLoose","_offset","_coerceFunc","coerce","loose","alignedLength","_peekBytes","readBytes","_throwError","writeValue","reader","readValue","coder","coders","values","arrayValues","unique","argument","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","uniqueNames","reduce","defaultChild","count","checkArgumentCount","isZero","writeBytes","size","maxUintValue","mask","bounds","gt","paramTypeBytes","paramTypeNumber","_getCoder","component","_getWordSize","_getWriter","_getReader","_isIndexed","BuiltinErrors","reason","wrapAccessError","property","wrap","fragments","abi","filter","bucket","deploy","functions","events","eventFragment","nameOrSignatureOrSighash","getSighash","matching","keys","f","nameOrSignatureOrTopic","topichash","getEventTopic","constructor","getFunction","getError","_","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","selector","builtin","CALL_EXCEPTION","method","UNEXPECTED_ARGUMENT","topics","encodeTopic","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","args","log","topic","decodeEventLog","hexData","errorFragment","_isInterface","allowedTransactionKeys","chainId","gasLimit","gasPrice","nonce","to","accessList","maxFeePerGas","maxPriorityFeePerGas","customData","resolver","nameOrPromise","resolveAddresses","paramType","all","makeError","populateTransaction","contract","overrides","signer","override","resolved","resolvedAddress","interface","encodeFunctionData","ro","intrinsic","roValue","leftovers","buildPopulate","buildEstimate","signerOrProvider","estimateGas","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","parseLog","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","blockTag","deployTransaction","_deployed","decodeFunctionResult","buildSend","txRequest","sendTransaction","buildDefault","getEventTag","tag","_listeners","listener","once","item","listenerCount","argsCopy","setTimeout","ErrorRunningEvent","contractInterface","prepareEvent","decodeError","addressOrName","Contract","isSigner","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","signatures","isInterface","_deployedPromise","getCode","contractAddress","deployed","isIndexed","runningEvent","_runningEvents","eventName","_normalizeRunningEvent","emit","_wrappedEmits","off","_checkRunningEvents","addListener","wrappedEmit","_wrapEvent","getEmit","on","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","MISSING_ARGUMENT","evm","getInterface","isRenetworkable","ethDefaultProvider","network","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","skip","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","bnb","bnbt","standard","defaultProvider","formats","getDefaultFormats","bigNumber","number","strictData","allowNull","blockNumber","transactionIndex","uint256","s","creates","raw","transactionRequest","receiptLog","arrayOf","logIndex","root","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","status","block","parentHash","timestamp","difficulty","miner","extraData","transactions","baseFeePerGas","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","author","_difficulty","_block","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","serializeTopics","sorted","sort","deserializeTopics","isForkEvent","getTime","Date","stall","duration","PollableEvents","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","sha2","matchers","_parseString","_parseBytes","formatter","parameters","coinType","hexBytes","coinInfo","toWords","unshift","callAddress","_fetchBytes","_getAddress","linkage","avatar","getText","content","owner","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","image","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","catch","_ready","knownNetwork","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","NETWORK_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","getNetwork","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","timeout","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","getTransactionCount","mined","getBlockWithTransactions","ti","waitForTransaction","eq","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","timer","TIMEOUT","unref","clearTimeout","SERVER_ERROR","_getBlockTag","position","p","expectedHash","returnedHash","confirms","signedTransaction","hexTx","t","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","oncePoll","_getBlock","_getFilter","_getResolver","getResolver","reverseName","resolverAddress","nameOrAddress","getAvatar","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","found","errorGas","checkError","body","responseText","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNPREDICTABLE_GAS_LIMIT","getResult","payload","getLowerCase","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","sender","hexlifyTransaction","sendUncheckedTransaction","getPayload","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","serverError","getSigner","connectUnchecked","request","jsonrpc","action","cache","connection","response","feeData","getFeeData","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","callback","_subs","subscription","processFunc","fauxPoll","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","_super","apiKey","checkAbstract","defaultApiKey","host","arguments","allowGzip","throttleCallback","attempt","getTransactionPostData","maxFeePerGs","storageKeys","throttleRetry","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getUrl","getPostData","procFunc","throttleSlotInterval","payloadStr","headers","fetch","txhash","postData","topic0","blocks","ethusd","endBlock","startblock","endblock","timeStamp","checkNetworks","median","maxDelta","middle","isBigNumber","nextRid","cancel","promise","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","weight","normalizedTally","normalize","configs","tally","getProcessFunc","_highestBlockNumber","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","total","results","shuffle","first","t0","inflightWeight","staller","backend","waiting","race","errorCode","props","IpcProvider","defaultProjectId","projectId","projectSecret","apiKeyObj","assertArgument","user","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","defaultApplicationIds","n","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","buildEip1193Fetcher","jsonRpcFetchFunc","subprovider","isMetaMask","sendAsync","getDefaultProvider","NodesmithProvider","Web3Provider","_ethers","ExecutionType","Networks","Utils","deepClone","__assign","assign","__generator","y","g","sent","trys","ops","verb","Symbol","iterator","op","Multicall","_options","ABI","internalType","web3Instance","_executionType","web3","ethersProvider","ethers","nodeUrl","customHttp","contractCallContexts","contractCallOptions","aggregateResponse","returnObject","contractCallsResults","originalContractCallContext","returnObjectResult","methodContext","originalContractCallMethodContext","outputTypes","decodedReturnValues","_a","execute","buildAggregateCallContext","contractContextIndex","callsReturnContext","methodResults","calls","contractMethodIndex","findOutputTypesFromAbi","methodName","tryAggregate","success","getReturnDataFromResult","returnValues","formatReturnValues","decoded","reference","methodParameters","returnData","decodedReturnResults","aggregateCallContext","contractContext","executingInterface","utils","encodedData","target","constants","AddressZero","_b","executeWithWeb3","executeWithEthersOrCustom","callParams","contractResponse","_c","getTypedOptions","eth","net","getId","getContractBasedOnNetwork","methods","tryBlockAndAggregate","mapCallContextToMatchContractFormat","buildUpAggregateResponse","aggregate","customProvider","overrideOptions","Number","_loop_1","existingResponse","find","callData","multicallCustomContractAddress","optimism","kovanOptimism","goerliOptimism","arbitrum","rinkebyArbitrum","goerliArbitrum","mumbai","sepolia","avalancheMainnet","avalancheFuji","fantomTestnet","fantom","bsc","bsc_testnet","moonbeam","moonriver","moonbaseAlphaTestnet","harmony","cronos","fuse","songbirdCanaryNetwork","costonTestnet","boba","aurora","astar","okc","heco","metis","rsk","rskTestnet","evmos","evmosTestnet","thundercore","thundercoreTestnet","oasis","celo","godwoken","godwokentestnet","klatyn","milkomeda","kcc","etherlite","text","names","suffix","formatted","unitName","ether","messagePrefix","isObject","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","checkInt","checkInts","arrayish","coerceArray","arg","copy","ArrayBuffer","isView","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","encodeURI","substr","convertHex","Hex","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utf8","padding","pkcs7","pad","strip","_arrayTest","ErrorDescription","forwardErrors","_checkProvider","getBalance","checkTransaction","signedTx","signTransaction","getGasPrice","hasEip1559","getChainId","_isSigner","_fail","bytes2","createTable","lo","pair","createRangeTable","hi","h","matchMap","ranges","range","d","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","shift","complex","_nameprepTableC","codesTableB2","NFKC","KeystoreAccount","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","kdf","N","prf","decryptSync","syncScrypt","scrypt","client","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipherparams","kdfparams","dklen","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","Writer","Reader","DESCRIPTORS","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","getOwnPropertyNames","getOwnPropertyDescriptor","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","third","radix","maxCode","it","NaN","NumberWrapper","valueOf","EtherSymbol","href","skipFetchSetup","mode","credentials","redirect","referrer","arrayBuffer","statusCode","statusMessage","statusText","bodyify","attemptLimit","throttleLimit","allow304","allowInsecureAuthentication","authorization","flatHeaders","header","runningTimeout","requestBody","requestMethod","runningFetch","tryAgain","retryAfter","pow","processJsonFunc","updated","hasContentType","ceiling","interval","retryLimit","onceBlock","exportWordlist","getWord","getWordIndex","ALPHABET","ALPHABET_MAP","z","x","polymodStep","pre","prefixChk","chk","LIMIT","__decode","str","lowered","uppered","toUpperCase","lastIndexOf","wordChars","decodeUnsafe","res","convert","inBits","outBits","bits","maxV","toWordsUnsafe","fromWordsUnsafe","fromWords","_isCrowdsaleAccount","encryptedSeed","aesCbc","seed","seedHex","seedHexBytes","decryptJsonWallet","decryptJsonWalletSync","One","MaxUint256","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","links","parents","subtypes","field","encoder","primaryTypes","checkCircular","subtype","primaryType","st","_types","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","regexBytes","regexNumber","regexArray","_pack","byteLength","tight","_isForkEvent","_isProvider","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","I","IL","IR","ki","Ki","ek","_addPoint","fingerprint","_derive","seedArray","_fromSeed","extendedKey","NFKD","checkNormalize","bit","entropyBits","checksumBits","checksumMask","checksum","indices","remainingBits","class","src","alt","local","setup","$t","refData","__exports__","render","looseArrayify","hexString","zpad","getPassword","searchPath","currentChild","matchingChild","uuidV4"],"mappings":"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","file":"static/js/chunk-ff022636.5fa7d511.js","sourcesContent":["const config = {\r\n  // 正式使用\r\n  OpenAddress: '0x73a3f115B4D6F210c5F27E046819d3ba7Db6Fad9',\r\n  UsdtAddress: '0x55d398326f99059fF775485246999027B3197955',\r\n  RootAddress: '0x37C8355ba83DC8084716f4D48D73d22BeA4303d2',\r\n\r\n  // // 测试使用\r\n  // OpenAddress: '0x4Bb02FC220a75D1345EF2aF3a20aC3292C41114C',\r\n  // UsdtAddress: '0xabe1bb9ED81F80c5FF06A4816DaB31FE10B3016A',\r\n  // RootAddress: '0xabe1bb9ED81F80c5FF06A4816DaB31FE10B3016A'\r\n}\r\n     \r\nexport default config;\r\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-black.14c536cc.png\";","module.exports = __webpack_public_path__ + \"static/img/dao-how.cf732d88.png\";","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-jiu.41fc2ed9.png\";","export const version = \"wallet/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Footer.vue?vue&type=style&index=0&id=7a33754f&lang=less&scoped=true\"","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-bear.2e0c97cb.png\";","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-dog.420b1b2e.png\";","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.parseBytes32String = void 0;\nvar abi_1 = require(\"@ethersproject/abi\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_1.AbiCoder; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return abi_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return abi_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"defaultAbiCoder\", { enumerable: true, get: function () { return abi_1.defaultAbiCoder; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return abi_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return abi_1.EventFragment; } });\nObject.defineProperty(exports, \"FormatTypes\", { enumerable: true, get: function () { return abi_1.FormatTypes; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return abi_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return abi_1.FunctionFragment; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return abi_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return abi_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return abi_1.LogDescription; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return abi_1.ParamType; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return abi_1.TransactionDescription; } });\nvar address_1 = require(\"@ethersproject/address\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_1.getAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return address_1.getCreate2Address; } });\nObject.defineProperty(exports, \"getContractAddress\", { enumerable: true, get: function () { return address_1.getContractAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_1.getIcapAddress; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return address_1.isAddress; } });\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nObject.defineProperty(exports, \"base58\", { enumerable: true, get: function () { return basex_1.Base58; } });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nObject.defineProperty(exports, \"arrayify\", { enumerable: true, get: function () { return bytes_1.arrayify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return bytes_1.concat; } });\nObject.defineProperty(exports, \"hexConcat\", { enumerable: true, get: function () { return bytes_1.hexConcat; } });\nObject.defineProperty(exports, \"hexDataSlice\", { enumerable: true, get: function () { return bytes_1.hexDataSlice; } });\nObject.defineProperty(exports, \"hexDataLength\", { enumerable: true, get: function () { return bytes_1.hexDataLength; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return bytes_1.hexlify; } });\nObject.defineProperty(exports, \"hexStripZeros\", { enumerable: true, get: function () { return bytes_1.hexStripZeros; } });\nObject.defineProperty(exports, \"hexValue\", { enumerable: true, get: function () { return bytes_1.hexValue; } });\nObject.defineProperty(exports, \"hexZeroPad\", { enumerable: true, get: function () { return bytes_1.hexZeroPad; } });\nObject.defineProperty(exports, \"isBytes\", { enumerable: true, get: function () { return bytes_1.isBytes; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return bytes_1.isBytesLike; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return bytes_1.isHexString; } });\nObject.defineProperty(exports, \"joinSignature\", { enumerable: true, get: function () { return bytes_1.joinSignature; } });\nObject.defineProperty(exports, \"zeroPad\", { enumerable: true, get: function () { return bytes_1.zeroPad; } });\nObject.defineProperty(exports, \"splitSignature\", { enumerable: true, get: function () { return bytes_1.splitSignature; } });\nObject.defineProperty(exports, \"stripZeros\", { enumerable: true, get: function () { return bytes_1.stripZeros; } });\nvar hash_1 = require(\"@ethersproject/hash\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", { enumerable: true, get: function () { return hash_1._TypedDataEncoder; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return hash_1.hashMessage; } });\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return hash_1.id; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return hash_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return hash_1.namehash; } });\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdnode_1.defaultPath; } });\nObject.defineProperty(exports, \"entropyToMnemonic\", { enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdnode_1.getAccountPath; } });\nObject.defineProperty(exports, \"HDNode\", { enumerable: true, get: function () { return hdnode_1.HDNode; } });\nObject.defineProperty(exports, \"isValidMnemonic\", { enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } });\nObject.defineProperty(exports, \"mnemonicToEntropy\", { enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } });\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } });\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak256_1.keccak256; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\nvar sha2_1 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar solidity_1 = require(\"@ethersproject/solidity\");\nObject.defineProperty(exports, \"solidityKeccak256\", { enumerable: true, get: function () { return solidity_1.keccak256; } });\nObject.defineProperty(exports, \"solidityPack\", { enumerable: true, get: function () { return solidity_1.pack; } });\nObject.defineProperty(exports, \"soliditySha256\", { enumerable: true, get: function () { return solidity_1.sha256; } });\nvar random_1 = require(\"@ethersproject/random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return random_1.shuffled; } });\nvar properties_1 = require(\"@ethersproject/properties\");\nObject.defineProperty(exports, \"checkProperties\", { enumerable: true, get: function () { return properties_1.checkProperties; } });\nObject.defineProperty(exports, \"deepCopy\", { enumerable: true, get: function () { return properties_1.deepCopy; } });\nObject.defineProperty(exports, \"defineReadOnly\", { enumerable: true, get: function () { return properties_1.defineReadOnly; } });\nObject.defineProperty(exports, \"getStatic\", { enumerable: true, get: function () { return properties_1.getStatic; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_1.resolveProperties; } });\nObject.defineProperty(exports, \"shallowCopy\", { enumerable: true, get: function () { return properties_1.shallowCopy; } });\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nObject.defineProperty(exports, \"computePublicKey\", { enumerable: true, get: function () { return signing_key_1.computePublicKey; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_1.SigningKey; } });\nvar strings_1 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"formatBytes32String\", { enumerable: true, get: function () { return strings_1.formatBytes32String; } });\nObject.defineProperty(exports, \"nameprep\", { enumerable: true, get: function () { return strings_1.nameprep; } });\nObject.defineProperty(exports, \"parseBytes32String\", { enumerable: true, get: function () { return strings_1.parseBytes32String; } });\nObject.defineProperty(exports, \"_toEscapedUtf8String\", { enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return strings_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return strings_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } });\nvar transactions_1 = require(\"@ethersproject/transactions\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return transactions_1.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return transactions_1.computeAddress; } });\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return transactions_1.parse; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return transactions_1.recoverAddress; } });\nObject.defineProperty(exports, \"serializeTransaction\", { enumerable: true, get: function () { return transactions_1.serialize; } });\nObject.defineProperty(exports, \"TransactionTypes\", { enumerable: true, get: function () { return transactions_1.TransactionTypes; } });\nvar units_1 = require(\"@ethersproject/units\");\nObject.defineProperty(exports, \"commify\", { enumerable: true, get: function () { return units_1.commify; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_1.parseUnits; } });\nvar wallet_1 = require(\"@ethersproject/wallet\");\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return wallet_1.verifyMessage; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return wallet_1.verifyTypedData; } });\nvar web_1 = require(\"@ethersproject/web\");\nObject.defineProperty(exports, \"_fetchData\", { enumerable: true, get: function () { return web_1._fetchData; } });\nObject.defineProperty(exports, \"fetchJson\", { enumerable: true, get: function () { return web_1.fetchJson; } });\nObject.defineProperty(exports, \"poll\", { enumerable: true, get: function () { return web_1.poll; } });\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } });\nvar strings_2 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", { enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } });\nObject.defineProperty(exports, \"Utf8ErrorReason\", { enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } });\n//# sourceMappingURL=utils.js.map","export const version = \"json-wallets/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-gun.ef84eaad.png\";","export const version = \"hash/5.5.0\";\n//# sourceMappingURL=_version.js.map","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","module.exports = __webpack_public_path__ + \"static/img/dao-tai.08ec5b00.png\";","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\nlet anyGlobal = null;\ntry {\n    anyGlobal = window;\n    if (anyGlobal == null) {\n        throw new Error(\"try next\");\n    }\n}\ncatch (error) {\n    try {\n        anyGlobal = global;\n        if (anyGlobal == null) {\n            throw new Error(\"try next\");\n        }\n    }\n    catch (error) {\n        anyGlobal = {};\n    }\n}\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","module.exports = __webpack_public_path__ + \"static/img/Blind-box.1a18e4d9.png\";","export const version = \"abi/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"contracts/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","export const version = \"providers/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: address,\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result) {\n    try {\n        return toUtf8String(_parseBytes(result));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            try {\n                return _parseBytes(yield this.provider.call(tx));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const transaction = {\n                        to: this.address,\n                        data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                    };\n                    const hexBytes = yield this.provider.call(transaction);\n                    // No address\n                    if (hexBytes === \"0x\" || hexBytes === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(hexBytes);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [];\n            try {\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    switch (match[1]) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: `https:/\\/gateway.ipfs.io/ipfs/${avatar.substring(7)}` };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (match[1] === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: match[1], content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (match[1] === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (match[1] === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx));\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (match[1] === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            }\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            // Pull the image URL out\n                            if (!metadata || typeof (metadata.image) !== \"string\" || !metadata.image.match(/^https:\\/\\//i)) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            linkage.push({ type: \"url\", content: metadata.image });\n                            return { linkage, url: metadata.image };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        const filter = event.filter;\n                        filter.fromBlock = this._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n                        const runner = this.getLogs(filter).then((logs) => {\n                            if (logs.length === 0) {\n                                return;\n                            }\n                            logs.forEach((log) => {\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                this.emit(filter, log);\n                            });\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"call\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const address = yield this._getResolver(name);\n                if (address == null) {\n                    return null;\n                }\n                return new Resolver(this, address, name);\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                return null;\n            }\n        });\n    }\n    _getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get the resolver from the blockchain\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"ENS\", network: network.name });\n            }\n            // keccak256(\"resolver(bytes32)\")\n            const transaction = {\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            };\n            try {\n                return this.formatter.callAddress(yield this.call(transaction));\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddress = yield this._getResolver(reverseName);\n            if (!resolverAddress) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            let bytes = arrayify(yield this.call({\n                to: resolverAddress,\n                data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n            }));\n            // Strip off the dynamic string pointer (0x20)\n            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {\n                return null;\n            }\n            bytes = bytes.slice(32);\n            // Not a length-prefixed string\n            if (bytes.length < 32) {\n                return null;\n            }\n            // Get the length of the string (from the length-prefix)\n            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n            bytes = bytes.slice(32);\n            // Length longer than available data\n            if (length > bytes.length) {\n                return null;\n            }\n            const name = toUtf8String(bytes.slice(0, length));\n            // Make sure the reverse record matches the foward record\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(reverseName);\n                if (!resolverAddress) {\n                    return null;\n                }\n                resolver = new Resolver(this, resolverAddress, \"_\", address);\n            }\n            else {\n                // ENS name; forward lookup\n                resolver = yield this.getResolver(nameOrAddress);\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        super(url, network);\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n        this._websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this._websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this._websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this._websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this._websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this._websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"ethers/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","export var ExecutionType;\n(function (ExecutionType) {\n    ExecutionType[\"web3\"] = \"web3\";\n    ExecutionType[\"ethers\"] = \"ethers\";\n    ExecutionType[\"customHttp\"] = \"custom\";\n})(ExecutionType || (ExecutionType = {}));\n","export var Networks;\n(function (Networks) {\n    Networks[Networks[\"mainnet\"] = 1] = \"mainnet\";\n    Networks[Networks[\"ropsten\"] = 3] = \"ropsten\";\n    Networks[Networks[\"rinkeby\"] = 4] = \"rinkeby\";\n    Networks[Networks[\"goerli\"] = 5] = \"goerli\";\n    Networks[Networks[\"optimism\"] = 10] = \"optimism\";\n    Networks[Networks[\"kovan\"] = 42] = \"kovan\";\n    Networks[Networks[\"matic\"] = 137] = \"matic\";\n    Networks[Networks[\"kovanOptimism\"] = 69] = \"kovanOptimism\";\n    Networks[Networks[\"xdai\"] = 100] = \"xdai\";\n    Networks[Networks[\"goerliOptimism\"] = 420] = \"goerliOptimism\";\n    Networks[Networks[\"arbitrum\"] = 42161] = \"arbitrum\";\n    Networks[Networks[\"rinkebyArbitrum\"] = 421611] = \"rinkebyArbitrum\";\n    Networks[Networks[\"goerliArbitrum\"] = 421613] = \"goerliArbitrum\";\n    Networks[Networks[\"mumbai\"] = 80001] = \"mumbai\";\n    Networks[Networks[\"sepolia\"] = 11155111] = \"sepolia\";\n    Networks[Networks[\"avalancheMainnet\"] = 43114] = \"avalancheMainnet\";\n    Networks[Networks[\"avalancheFuji\"] = 43113] = \"avalancheFuji\";\n    Networks[Networks[\"fantomTestnet\"] = 4002] = \"fantomTestnet\";\n    Networks[Networks[\"fantom\"] = 250] = \"fantom\";\n    Networks[Networks[\"bsc\"] = 56] = \"bsc\";\n    Networks[Networks[\"bsc_testnet\"] = 97] = \"bsc_testnet\";\n    Networks[Networks[\"moonbeam\"] = 1284] = \"moonbeam\";\n    Networks[Networks[\"moonriver\"] = 1285] = \"moonriver\";\n    Networks[Networks[\"moonbaseAlphaTestnet\"] = 1287] = \"moonbaseAlphaTestnet\";\n    Networks[Networks[\"harmony\"] = 1666600000] = \"harmony\";\n    Networks[Networks[\"cronos\"] = 25] = \"cronos\";\n    Networks[Networks[\"fuse\"] = 122] = \"fuse\";\n    Networks[Networks[\"songbirdCanaryNetwork\"] = 19] = \"songbirdCanaryNetwork\";\n    Networks[Networks[\"costonTestnet\"] = 16] = \"costonTestnet\";\n    Networks[Networks[\"boba\"] = 288] = \"boba\";\n    Networks[Networks[\"aurora\"] = 1313161554] = \"aurora\";\n    Networks[Networks[\"astar\"] = 592] = \"astar\";\n    Networks[Networks[\"okc\"] = 66] = \"okc\";\n    Networks[Networks[\"heco\"] = 128] = \"heco\";\n    Networks[Networks[\"metis\"] = 1088] = \"metis\";\n    Networks[Networks[\"rsk\"] = 30] = \"rsk\";\n    Networks[Networks[\"rskTestnet\"] = 31] = \"rskTestnet\";\n    Networks[Networks[\"evmos\"] = 9001] = \"evmos\";\n    Networks[Networks[\"evmosTestnet\"] = 9000] = \"evmosTestnet\";\n    Networks[Networks[\"thundercore\"] = 108] = \"thundercore\";\n    Networks[Networks[\"thundercoreTestnet\"] = 18] = \"thundercoreTestnet\";\n    Networks[Networks[\"oasis\"] = 26863] = \"oasis\";\n    Networks[Networks[\"celo\"] = 42220] = \"celo\";\n    Networks[Networks[\"godwoken\"] = 71402] = \"godwoken\";\n    Networks[Networks[\"godwokentestnet\"] = 71401] = \"godwokentestnet\";\n    Networks[Networks[\"klatyn\"] = 8217] = \"klatyn\";\n    Networks[Networks[\"milkomeda\"] = 2001] = \"milkomeda\";\n    Networks[Networks[\"kcc\"] = 321] = \"kcc\";\n    Networks[Networks[\"etherlite\"] = 111] = \"etherlite\";\n})(Networks || (Networks = {}));\n","var Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    /**\n     * Deep clone a object\n     * @param object The object\n     */\n    Utils.deepClone = function (object) {\n        return JSON.parse(JSON.stringify(object));\n    };\n    return Utils;\n}());\nexport { Utils };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { BigNumber, ethers } from 'ethers';\nimport { defaultAbiCoder } from 'ethers/lib/utils';\nimport { ExecutionType, Networks } from './enums';\nimport { Utils } from './utils';\nvar Multicall = /** @class */ (function () {\n    function Multicall(_options) {\n        this._options = _options;\n        this.ABI = [\n            {\n                constant: false,\n                inputs: [\n                    {\n                        components: [\n                            { name: 'target', type: 'address' },\n                            { name: 'callData', type: 'bytes' },\n                        ],\n                        name: 'calls',\n                        type: 'tuple[]',\n                    },\n                ],\n                name: 'aggregate',\n                outputs: [\n                    { name: 'blockNumber', type: 'uint256' },\n                    { name: 'returnData', type: 'bytes[]' },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                inputs: [\n                    {\n                        internalType: 'bool',\n                        name: 'requireSuccess',\n                        type: 'bool',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'address',\n                                name: 'target',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'bytes',\n                                name: 'callData',\n                                type: 'bytes',\n                            },\n                        ],\n                        internalType: 'struct Multicall2.Call[]',\n                        name: 'calls',\n                        type: 'tuple[]',\n                    },\n                ],\n                name: 'tryBlockAndAggregate',\n                outputs: [\n                    {\n                        internalType: 'uint256',\n                        name: 'blockNumber',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'bytes32',\n                        name: 'blockHash',\n                        type: 'bytes32',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'bool',\n                                name: 'success',\n                                type: 'bool',\n                            },\n                            {\n                                internalType: 'bytes',\n                                name: 'returnData',\n                                type: 'bytes',\n                            },\n                        ],\n                        internalType: 'struct Multicall2.Result[]',\n                        name: 'returnData',\n                        type: 'tuple[]',\n                    },\n                ],\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n        ];\n        if (this._options.web3Instance) {\n            this._executionType = ExecutionType.web3;\n            return;\n        }\n        if (this._options.ethersProvider) {\n            this._executionType = ExecutionType.ethers;\n            return;\n        }\n        if (this._options.nodeUrl) {\n            this._executionType = ExecutionType.customHttp;\n            return;\n        }\n        throw new Error(\n        // tslint:disable-next-line: max-line-length\n        'Your options passed in our incorrect they need to match either `MulticallOptionsEthers`, `MulticallOptionsWeb3` or `MulticallOptionsCustomJsonRpcProvider` interfaces');\n    }\n    /**\n     * Call all the contract calls in 1\n     * @param calls The calls\n     */\n    Multicall.prototype.call = function (contractCallContexts, contractCallOptions) {\n        if (contractCallOptions === void 0) { contractCallOptions = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var aggregateResponse, returnObject, response, contractCallsResults, originalContractCallContext, returnObjectResult, method, methodContext, originalContractCallMethodContext, outputTypes, decodedReturnValues;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!Array.isArray(contractCallContexts)) {\n                            contractCallContexts = [contractCallContexts];\n                        }\n                        return [4 /*yield*/, this.execute(this.buildAggregateCallContext(contractCallContexts), contractCallOptions)];\n                    case 1:\n                        aggregateResponse = _a.sent();\n                        returnObject = {\n                            results: {},\n                            blockNumber: aggregateResponse.blockNumber,\n                        };\n                        for (response = 0; response < aggregateResponse.results.length; response++) {\n                            contractCallsResults = aggregateResponse.results[response];\n                            originalContractCallContext = contractCallContexts[contractCallsResults.contractContextIndex];\n                            returnObjectResult = {\n                                originalContractCallContext: Utils.deepClone(originalContractCallContext),\n                                callsReturnContext: [],\n                            };\n                            for (method = 0; method < contractCallsResults.methodResults.length; method++) {\n                                methodContext = contractCallsResults.methodResults[method];\n                                originalContractCallMethodContext = originalContractCallContext.calls[methodContext.contractMethodIndex];\n                                outputTypes = this.findOutputTypesFromAbi(originalContractCallContext.abi, originalContractCallMethodContext.methodName);\n                                if (this._options.tryAggregate && !methodContext.result.success) {\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\n                                        returnValues: [],\n                                        decoded: false,\n                                        reference: originalContractCallMethodContext.reference,\n                                        methodName: originalContractCallMethodContext.methodName,\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\n                                        success: false,\n                                    }));\n                                    continue;\n                                }\n                                if (outputTypes && outputTypes.length > 0) {\n                                    try {\n                                        decodedReturnValues = defaultAbiCoder.decode(\n                                        // tslint:disable-next-line: no-any\n                                        outputTypes, this.getReturnDataFromResult(methodContext.result));\n                                        returnObjectResult.callsReturnContext.push(Utils.deepClone({\n                                            returnValues: this.formatReturnValues(decodedReturnValues),\n                                            decoded: true,\n                                            reference: originalContractCallMethodContext.reference,\n                                            methodName: originalContractCallMethodContext.methodName,\n                                            methodParameters: originalContractCallMethodContext.methodParameters,\n                                            success: true,\n                                        }));\n                                    }\n                                    catch (e) {\n                                        if (!this._options.tryAggregate) {\n                                            throw e;\n                                        }\n                                        returnObjectResult.callsReturnContext.push(Utils.deepClone({\n                                            returnValues: [],\n                                            decoded: false,\n                                            reference: originalContractCallMethodContext.reference,\n                                            methodName: originalContractCallMethodContext.methodName,\n                                            methodParameters: originalContractCallMethodContext.methodParameters,\n                                            success: false,\n                                        }));\n                                    }\n                                }\n                                else {\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\n                                        returnValues: this.getReturnDataFromResult(methodContext.result),\n                                        decoded: false,\n                                        reference: originalContractCallMethodContext.reference,\n                                        methodName: originalContractCallMethodContext.methodName,\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\n                                        success: true,\n                                    }));\n                                }\n                            }\n                            returnObject.results[returnObjectResult.originalContractCallContext.reference] = returnObjectResult;\n                        }\n                        return [2 /*return*/, returnObject];\n                }\n            });\n        });\n    };\n    /**\n     * Get return data from result\n     * @param result The result\n     */\n    // tslint:disable-next-line: no-any\n    Multicall.prototype.getReturnDataFromResult = function (result) {\n        if (this._options.tryAggregate) {\n            return result.returnData;\n        }\n        return result;\n    };\n    /**\n     * Format return values so its always an array\n     * @param decodedReturnValues The decoded return values\n     */\n    // tslint:disable-next-line: no-any\n    Multicall.prototype.formatReturnValues = function (decodedReturnValues) {\n        var decodedReturnResults = decodedReturnValues;\n        if (decodedReturnValues.length === 1) {\n            decodedReturnResults = decodedReturnValues[0];\n        }\n        if (Array.isArray(decodedReturnResults)) {\n            return decodedReturnResults;\n        }\n        return [decodedReturnResults];\n    };\n    /**\n     * Build aggregate call context\n     * @param contractCallContexts The contract call contexts\n     */\n    Multicall.prototype.buildAggregateCallContext = function (contractCallContexts) {\n        var aggregateCallContext = [];\n        for (var contract = 0; contract < contractCallContexts.length; contract++) {\n            var contractContext = contractCallContexts[contract];\n            var executingInterface = new ethers.utils.Interface(JSON.stringify(contractContext.abi));\n            for (var method = 0; method < contractContext.calls.length; method++) {\n                // https://github.com/ethers-io/ethers.js/issues/211\n                var methodContext = contractContext.calls[method];\n                // tslint:disable-next-line: no-unused-expression\n                var encodedData = executingInterface.encodeFunctionData(methodContext.methodName, methodContext.methodParameters);\n                aggregateCallContext.push({\n                    contractContextIndex: Utils.deepClone(contract),\n                    contractMethodIndex: Utils.deepClone(method),\n                    target: contractContext.contractAddress,\n                    encodedData: encodedData,\n                });\n            }\n        }\n        return aggregateCallContext;\n    };\n    /**\n     * Find output types from abi\n     * @param abi The abi\n     * @param methodName The method name\n     */\n    Multicall.prototype.findOutputTypesFromAbi = function (abi, methodName) {\n        var _a;\n        var contract = new ethers.Contract(ethers.constants.AddressZero, abi);\n        methodName = methodName.trim();\n        if (contract.interface.functions[methodName]) {\n            return contract.interface.functions[methodName].outputs;\n        }\n        for (var i = 0; i < abi.length; i++) {\n            if (((_a = abi[i].name) === null || _a === void 0 ? void 0 : _a.trim()) === methodName) {\n                return abi[i].outputs;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Execute the multicall contract call\n     * @param calls The calls\n     */\n    Multicall.prototype.execute = function (calls, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this._executionType;\n                        switch (_a) {\n                            case ExecutionType.web3: return [3 /*break*/, 1];\n                            case ExecutionType.ethers: return [3 /*break*/, 3];\n                            case ExecutionType.customHttp: return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 5];\n                    case 1: return [4 /*yield*/, this.executeWithWeb3(calls, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3: return [4 /*yield*/, this.executeWithEthersOrCustom(calls, options)];\n                    case 4: return [2 /*return*/, _b.sent()];\n                    case 5: throw new Error(this._executionType + \" is not defined\");\n                }\n            });\n        });\n    };\n    /**\n     * Execute aggregate with web3 instance\n     * @param calls The calls context\n     */\n    Multicall.prototype.executeWithWeb3 = function (calls, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var web3, networkId, contract, callParams, contractResponse, contractResponse;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        web3 = this.getTypedOptions().web3Instance;\n                        return [4 /*yield*/, web3.eth.net.getId()];\n                    case 1:\n                        networkId = _c.sent();\n                        contract = new web3.eth.Contract(this.ABI, this.getContractBasedOnNetwork(networkId));\n                        callParams = [];\n                        if (options.blockNumber) {\n                            callParams.push(options.blockNumber);\n                        }\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\n                        return [4 /*yield*/, (_a = contract.methods\n                                .tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls)))\n                                .call.apply(_a, callParams)];\n                    case 2:\n                        contractResponse = (_c.sent());\n                        contractResponse.blockNumber = BigNumber.from(contractResponse.blockNumber);\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                    case 3: return [4 /*yield*/, (_b = contract.methods\n                            .aggregate(this.mapCallContextToMatchContractFormat(calls)))\n                            .call.apply(_b, callParams)];\n                    case 4:\n                        contractResponse = (_c.sent());\n                        contractResponse.blockNumber = BigNumber.from(contractResponse.blockNumber);\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                }\n            });\n        });\n    };\n    /**\n     * Execute with ethers using passed in provider context or custom one\n     * @param calls The calls\n     */\n    Multicall.prototype.executeWithEthersOrCustom = function (calls, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ethersProvider, customProvider, network, contract, overrideOptions, contractResponse, contractResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ethersProvider = this.getTypedOptions()\n                            .ethersProvider;\n                        if (!ethersProvider) {\n                            customProvider = this.getTypedOptions();\n                            if (customProvider.nodeUrl) {\n                                ethersProvider = new ethers.providers.JsonRpcProvider(customProvider.nodeUrl);\n                            }\n                            else {\n                                ethersProvider = ethers.getDefaultProvider();\n                            }\n                        }\n                        return [4 /*yield*/, ethersProvider.getNetwork()];\n                    case 1:\n                        network = _a.sent();\n                        contract = new ethers.Contract(this.getContractBasedOnNetwork(network.chainId), this.ABI, ethersProvider);\n                        overrideOptions = {};\n                        if (options.blockNumber) {\n                            overrideOptions = __assign(__assign({}, overrideOptions), { blockTag: Number(options.blockNumber) });\n                        }\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\n                        return [4 /*yield*/, contract.callStatic.tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls), overrideOptions)];\n                    case 2:\n                        contractResponse = (_a.sent());\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                    case 3: return [4 /*yield*/, contract.callStatic.aggregate(this.mapCallContextToMatchContractFormat(calls), overrideOptions)];\n                    case 4:\n                        contractResponse = (_a.sent());\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                }\n            });\n        });\n    };\n    /**\n     * Build up the aggregated response from the contract response mapping\n     * metadata from the calls\n     * @param contractResponse The contract response\n     * @param calls The calls\n     */\n    Multicall.prototype.buildUpAggregateResponse = function (contractResponse, calls) {\n        var aggregateResponse = {\n            blockNumber: contractResponse.blockNumber.toNumber(),\n            results: [],\n        };\n        var _loop_1 = function (i) {\n            var existingResponse = aggregateResponse.results.find(function (c) { return c.contractContextIndex === calls[i].contractContextIndex; });\n            if (existingResponse) {\n                existingResponse.methodResults.push({\n                    result: contractResponse.returnData[i],\n                    contractMethodIndex: calls[i].contractMethodIndex,\n                });\n            }\n            else {\n                aggregateResponse.results.push({\n                    methodResults: [\n                        {\n                            result: contractResponse.returnData[i],\n                            contractMethodIndex: calls[i].contractMethodIndex,\n                        },\n                    ],\n                    contractContextIndex: calls[i].contractContextIndex,\n                });\n            }\n        };\n        for (var i = 0; i < contractResponse.returnData.length; i++) {\n            _loop_1(i);\n        }\n        return aggregateResponse;\n    };\n    /**\n     * Map call contract to match contract format\n     * @param calls The calls context\n     */\n    Multicall.prototype.mapCallContextToMatchContractFormat = function (calls) {\n        return calls.map(function (call) {\n            return {\n                target: call.target,\n                callData: call.encodedData,\n            };\n        });\n    };\n    /**\n     * Get typed options\n     */\n    Multicall.prototype.getTypedOptions = function () {\n        return this._options;\n    };\n    /**\n     * Get the contract based on the network\n     * @param tryAggregate The tryAggregate\n     * @param network The network\n     */\n    Multicall.prototype.getContractBasedOnNetwork = function (network) {\n        // if they have overriden the multicall custom contract address then use that\n        if (this._options.multicallCustomContractAddress) {\n            return this._options.multicallCustomContractAddress;\n        }\n        switch (network) {\n            case Networks.mainnet:\n            case Networks.ropsten:\n            case Networks.rinkeby:\n            case Networks.goerli:\n            case Networks.optimism:\n            case Networks.kovan:\n            case Networks.matic:\n            case Networks.kovanOptimism:\n            case Networks.xdai:\n            case Networks.goerliOptimism:\n            case Networks.arbitrum:\n            case Networks.rinkebyArbitrum:\n            case Networks.goerliArbitrum:\n            case Networks.mumbai:\n            case Networks.sepolia:\n            case Networks.avalancheMainnet:\n            case Networks.avalancheFuji:\n            case Networks.fantomTestnet:\n            case Networks.fantom:\n            case Networks.bsc:\n            case Networks.bsc_testnet:\n            case Networks.moonbeam:\n            case Networks.moonriver:\n            case Networks.moonbaseAlphaTestnet:\n            case Networks.harmony:\n            case Networks.cronos:\n            case Networks.fuse:\n            case Networks.songbirdCanaryNetwork:\n            case Networks.costonTestnet:\n            case Networks.boba:\n            case Networks.aurora:\n            case Networks.astar:\n            case Networks.okc:\n            case Networks.heco:\n            case Networks.metis:\n            case Networks.rsk:\n            case Networks.rskTestnet:\n            case Networks.evmos:\n            case Networks.evmosTestnet:\n            case Networks.thundercore:\n            case Networks.thundercoreTestnet:\n            case Networks.oasis:\n            case Networks.celo:\n            case Networks.godwoken:\n            case Networks.godwokentestnet:\n            case Networks.klatyn:\n            case Networks.milkomeda:\n            case Networks.kcc:\n                return '0xcA11bde05977b3631167028862bE2a173976CA11';\n            case Networks.etherlite:\n                return '0x21681750D7ddCB8d1240eD47338dC984f94AF2aC';\n            default:\n                throw new Error(\"Network - \" + network + \" doesn't have a multicall contract address defined. Please check your network or deploy your own contract on it.\");\n        }\n    };\n    return Multicall;\n}());\nexport { Multicall };\n","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"abi/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"units/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","\"use strict\";\nexport { decode, encode } from \"./base64\";\n//# sourceMappingURL=index.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"abstract-signer/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { id } from \"./id\";\nimport { isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\nexport { id, namehash, isValidName, messagePrefix, hashMessage, _TypedDataEncoder, };\n//# sourceMappingURL=index.js.map","import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\nimport { SupportedAlgorithm } from \"./types\";\nexport { computeHmac, ripemd160, sha256, sha512, SupportedAlgorithm };\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-yellow.21f9d511.png\";","module.exports = __webpack_public_path__ + \"static/img/studio.dbb8687e.png\";","\"use strict\";\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\nexport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason, UnicodeNormalizationForm, formatBytes32String, parseBytes32String, nameprep };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-fox.d8308448.png\";","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","module.exports = __webpack_public_path__ + \"static/img/potato.e508d5ba.png\";","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","module.exports = __webpack_public_path__ + \"static/img/dao-goldgun.1420e73e.png\";","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","export const version = \"web/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    // Exponential back-off throttling\n                    if (response.statusCode === 429 && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = yield throttleCallback(attempt, url);\n                        }\n                        if (tryAgain) {\n                            let stall = 0;\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            }\n                            else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n                            //console.log(\"Stalling 429\");\n                            yield staller(stall);\n                            continue;\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (response.statusCode < 200 || response.statusCode >= 300) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"wordlists/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","module.exports = __webpack_public_path__ + \"static/img/dao-red.2902d5ba.png\";","\"use strict\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, TransactionDescription } from \"./interface\";\nexport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType, FormatTypes, AbiCoder, defaultAbiCoder, Interface, Indexed, checkResultErrors, LogDescription, TransactionDescription };\n//# sourceMappingURL=index.js.map","export const version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-provider/5.5.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","<template>\r\n  <div class=\"footer\" :class=\"{'bg-color': local === en}\">\r\n    <div class=\"footer-tit\" v-if=\"local === 'en'\">\r\n      Potato Manor shared joy and joy,Earn surprises while playing!\r\n    </div>\r\n    <div class=\"footer-tit\" v-else>\r\n      土豆莊園歡樂共享,<br>邊玩邊賺驚喜不斷!\r\n    </div>\r\n    <div class=\"Somewhere\">\r\n      <img src=\"@/assets/images/studio.png\" alt=\"\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\nimport { Toast } from \"vant\";\r\nimport { useI18n } from \"vue-i18n\";\r\nimport { getLang, setLang } from \"@/utils/i18n\"\r\n\r\nexport default {\r\n  setup() {\r\n    const { t } = useI18n()\r\n    const data = reactive({\r\n      $t: t,\r\n      local: getLang().toLowerCase() || \"en\",\r\n    })\r\n    const refData = toRefs(data);\r\n    return {\r\n      ...refData\r\n    };\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.footer{\r\n  background: #080D28;\r\n  padding: 32px 24px 38px;\r\n  .footer-tit{\r\n    font-size: 23px;\r\n    color: #FEF846;\r\n    line-height: 29px;\r\n    text-align: center;\r\n    margin-bottom: 34px;\r\n  }\r\n  .Somewhere{\r\n    width: 228px;\r\n    margin: 0 auto;\r\n    img{\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n  }\r\n}\r\n.bg-color{\r\n  background: #000;\r\n}\r\n</style>\r\n","import { render } from \"./Footer.vue?vue&type=template&id=7a33754f&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=7a33754f&lang=less&scoped=true\"\n\nimport exportComponent from \"D:\\\\contract\\\\frontend\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7a33754f\"]])\n\nexport default __exports__","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"random/5.5.0\";\n//# sourceMappingURL=_version.js.map"],"sourceRoot":""}